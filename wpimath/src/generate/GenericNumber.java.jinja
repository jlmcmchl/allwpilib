// Copyright (c) FIRST and other WPILib contributors.
// Open Source Software; you can modify and/or share it under the terms of
// the WPILib BSD license file in the root directory of this project.

package edu.wpi.first.math.numbers;

{% if num == 0 %} 
import edu.wpi.first.math.Nat;
{% endif %}
import edu.wpi.first.math.Successor;


/**
 * A class representing the number {{ num }}.
*/
public final class N{{ num }} implements {% if num > 0 %} {% for i in range(num) %}Successor<{% endfor %}N0{% for i in range(num) %}>{% endfor %} {% else %} Nat<N0> {% endif %} {
  private N{{ num }}() {
  }

  /**
   * The integer this class represents.
   *
   * @return The literal number {{ num }}.
  */
  @Override
  public int getNum() {
    return {{ num }};
  }

  /**
   * The singleton instance of this class.
  */
  public static final N{{ num }} instance = new N{{ num }}();

  /**
   * The number one greater than the number this interface represents.
   *
   * @return A type representing the number {{ num + 1 }}.
   */
  @Override
  public {% for i in range(num + 1) %}Successor<{% endfor %}N0{% for i in range(num + 1) %}>{% endfor %} inc() {
{% if num == 20 %}
    return null;
{% else %}
    return N{{num + 1}}.instance;
{% endif %}
  }
}
